{
  "permissions": {
    "allow": [
      "Bash(find:*)",
      "Bash(python3:*)",
      "Bash(mv:*)",
      "Bash(python:*)",
      "Bash(git rm:*)",
      "Bash(git add:*)",
      "Bash(ls:*)",
      "Bash(git ls-tree:*)",
      "Bash(mkdir:*)",
      "Bash(zip:*)",
      "Bash(parsers/community/aws_waf-latest/ )",
      "Bash(parsers/community/aws_route53-latest/ )",
      "Bash(parsers/community/cisco_ironport-latest/ )",
      "Bash(parsers/community/cyberark_conjur-latest/ )",
      "Bash(parsers/community/iis_w3c-latest/ )",
      "Bash(parsers/community/linux_auth-latest/ )",
      "Bash(parsers/community/microsoft_365_collaboration-latest/ )",
      "Bash(parsers/community/microsoft_365_defender-latest/ )",
      "Bash(parsers/community/pingfederate-latest/ )",
      "Bash(parsers/community/zscaler_dns_firewall-latest/)",
      "Bash(chmod:*)",
      "Bash(parsers/community/akamai_cdn-latest/ )",
      "Bash(parsers/community/akamai_dns-latest/ )",
      "Bash(parsers/community/akamai_general-latest/ )",
      "Bash(parsers/community/akamai_sitedefender-latest/ )",
      "Bash(parsers/community/axway_sftp-latest/ )",
      "Bash(parsers/community/cisco_duo-latest/ )",
      "Bash(parsers/community/cohesity_backup-latest/ )",
      "Bash(parsers/community/f5_vpn-latest/ )",
      "Bash(parsers/community/github_audit-latest/ )",
      "Bash(parsers/community/harness_ci-latest/ )",
      "Bash(parsers/community/hypr_auth-latest/ )",
      "Bash(parsers/community/imperva_sonar-latest/ )",
      "Bash(parsers/community/isc_bind-latest/ )",
      "Bash(parsers/community/isc_dhcp-latest/ )",
      "Bash(parsers/community/jamf_protect-latest/ )",
      "Bash(parsers/community/pingone_mfa-latest/ )",
      "Bash(parsers/community/pingprotect-latest/ )",
      "Bash(parsers/community/rsa_adaptive-latest/ )",
      "Bash(parsers/community/veeam_backup-latest/ )",
      "Bash(parsers/community/wiz_cloud-latest/)",
      "Bash(export S1_HEC_TOKEN=1FUC88b9Z4BaHtQxwIXwYGqFPaVQO7jzXDuYxDuMD2q1s57bX4MvgEMxUCLaH7pbO)",
      "Bash(grep:*)",
      "Bash(export S1_HEC_TOKEN=1FUC88b9Z4BaHtQxwIXwYGqFPaVQO7jzXDuMD2q1s57bX4MvgEMxUCLaH7pbO)",
      "Bash(rm:*)",
      "Bash(/Users/nathanial.smalley/projects/jarvis_coding/.venv/bin/python3 -m json.tool /Users/nathanial.smalley/projects/jarvis_coding/parsers/community/cisco_fmc_logs-latest/cisco_fmc.json)",
      "Bash(/Users/nathanial.smalley/projects/jarvis_coding/.venv/bin/python3 -m json.tool /Users/nathanial.smalley/projects/jarvis_coding/parsers/community/cisco_ios_logs-latest/cisco_ios.json)",
      "Bash(/Users/nathanial.smalley/projects/jarvis_coding/.venv/bin/python3 -m json.tool /Users/nathanial.smalley/projects/jarvis_coding/parsers/community/cisco_isa3000_logs-latest/cisco_isa3000.json)",
      "Bash(/Users/nathanial.smalley/projects/jarvis_coding/.venv/bin/python3 -m json.tool /Users/nathanial.smalley/projects/jarvis_coding/parsers/community/cisco_meraki_flow_logs-latest/cisco_meraki_flow.json)",
      "Bash(/Users/nathanial.smalley/projects/jarvis_coding/.venv/bin/python3 -m json.tool /Users/nathanial.smalley/projects/jarvis_coding/parsers/community/paloalto_paloalto_logs-latest/paloalto_paloalto.json)",
      "Bash(/Users/nathanial.smalley/projects/jarvis_coding/.venv/bin/python3 event_python_writer/cisco_fmc.py)",
      "Bash(/Users/nathanial.smalley/projects/jarvis_coding/.venv/bin/python3 event_python_writer/cisco_ios.py)",
      "Bash(/Users/nathanial.smalley/projects/jarvis_coding/.venv/bin/python3 event_python_writer/cisco_isa3000.py)",
      "Bash(/Users/nathanial.smalley/projects/jarvis_coding/.venv/bin/python3 -c \"from event_python_writer.cisco_meraki import meraki_log; print(meraki_log())\")",
      "Bash(/Users/nathanial.smalley/projects/jarvis_coding/.venv/bin/python3 event_python_writer/paloalto_prismasase.py)",
      "Bash(/Users/nathanial.smalley/projects/jarvis_coding/.venv/bin/python3 -c \"from event_python_writer.cisco_fmc import cisco_fmc_log; print(cisco_fmc_log())\")",
      "Bash(/Users/nathanial.smalley/projects/jarvis_coding/.venv/bin/python3 -c \"from event_python_writer.cisco_ios import cisco_ios_log; print(cisco_ios_log())\")",
      "Bash(/Users/nathanial.smalley/projects/jarvis_coding/.venv/bin/python3 -c \"from event_python_writer.paloalto_prismasase import paloalto_prismasase_log; print(paloalto_prismasase_log())\")",
      "Bash(git commit:*)",
      "Bash(for file in axway_sftp-latest/axway_sftp.json akamai_sitedefender-latest/akamai_sitedefender.json cohesity_backup-latest/cohesity_backup.json veeam_backup-latest/veeam_backup.json)",
      "Bash(do echo:*)",
      "Bash(done)",
      "Bash(timeout 30 python3:*)",
      "Bash(gtimeout:*)",
      "Bash(/Users/nathanial.smalley/projects/jarvis_coding/.venv/bin/python3 -c \"from event_python_writer.aws_waf import aws_waf_log; print(aws_waf_log())\")",
      "Bash(/Users/nathanial.smalley/projects/jarvis_coding/.venv/bin/python3 -m json.tool /Users/nathanial.smalley/projects/jarvis_coding/parsers/community/aws_waf-latest/aws_waf.json)",
      "Bash(/Users/nathanial.smalley/projects/jarvis_coding/.venv/bin/python3 -c \"from event_python_writer.abnormal_security import abnormal_security_log; print(abnormal_security_log())\")",
      "Bash(/Users/nathanial.smalley/projects/jarvis_coding/.venv/bin/python3 -m json.tool /Users/nathanial.smalley/projects/jarvis_coding/parsers/community/abnormal_security_logs-latest/abnormal_security.json)",
      "Bash(timeout 15 python3 event_python_writer/hec_sender.py --product jamf_protect --count 2)",
      "Bash(__NEW_LINE__ export S1_HEC_TOKEN=1FUC88b9Z4BaHtQxwIXwYGqFPaVQO7jzXDuMD2q1s57bX4MvgEMxUCLaH7pbO)",
      "Bash(__NEW_LINE__ echo \"Testing 4 generators with 5 events each:\")",
      "Bash(__NEW_LINE__ echo \"1. AWS Route53 (DNS):\")",
      "Bash(__NEW_LINE__ echo \"\")",
      "Bash(parsers/community/aws_waf-latest/ )",
      "Bash(parsers/community/aws_route53-latest/ )",
      "Bash(parsers/community/cisco_ironport-latest/ )",
      "Bash(parsers/community/cyberark_conjur-latest/ )",
      "Bash(parsers/community/iis_w3c-latest/ )",
      "Bash(parsers/community/linux_auth-latest/ )",
      "Bash(parsers/community/microsoft_365_collaboration-latest/ )",
      "Bash(parsers/community/microsoft_365_defender-latest/ )",
      "Bash(parsers/community/pingfederate-latest/ )",
      "Bash(parsers/community/akamai_cdn-latest/ )",
      "Bash(parsers/community/akamai_dns-latest/ )",
      "Bash(parsers/community/akamai_general-latest/ )",
      "Bash(parsers/community/akamai_sitedefender-latest/ )",
      "Bash(parsers/community/axway_sftp-latest/ )",
      "Bash(parsers/community/cisco_duo-latest/ )",
      "Bash(parsers/community/cohesity_backup-latest/ )",
      "Bash(parsers/community/f5_vpn-latest/ )",
      "Bash(parsers/community/github_audit-latest/ )",
      "Bash(parsers/community/harness_ci-latest/ )",
      "Bash(parsers/community/hypr_auth-latest/ )",
      "Bash(parsers/community/imperva_sonar-latest/ )",
      "Bash(parsers/community/isc_bind-latest/ )",
      "Bash(parsers/community/isc_dhcp-latest/ )",
      "Bash(parsers/community/jamf_protect-latest/ )",
      "Bash(parsers/community/pingone_mfa-latest/ )",
      "Bash(parsers/community/pingprotect-latest/ )",
      "Bash(parsers/community/rsa_adaptive-latest/ )",
      "Bash(parsers/community/veeam_backup-latest/ )",
      "Bash(parsers/community/cisco_fmc_logs-latest/ )",
      "Bash(parsers/community/cisco_ios_logs-latest/ )",
      "Bash(parsers/community/cisco_isa3000_logs-latest/ )",
      "Bash(parsers/community/cisco_meraki_flow_logs-latest/ )",
      "Bash(parsers/community/paloalto_prismasase_logs-latest/)",
      "Bash(.venv/bin/python3:*)",
      "Bash(export S1_HEC_TOKEN=dummy)",
      "Bash(../.venv/bin/python3 test_all_generators.py:*)",
      "Bash(timeout:*)",
      "Bash(for:*)",
      "Bash(do)",
      "Bash(file=\"parsers/community/$parser-latest/$parser.json\")",
      "Bash(if [ -f \"$file\" ])",
      "Bash(then)",
      "Bash(echo:*)",
      "Bash(if grep -q 'parse=gron' \"$file\")",
      "Bash(elif grep -q 'logPattern' \"$file\")",
      "Bash(else)",
      "Bash(fi)",
      "Bash(/dev/null)",
      "Bash(do python3:*)",
      "Bash(export S1_API_URL=\"https://usea1-purple.sentinelone.net\")",
      "Bash(export:*)",
      "Bash(export S1_HEC_TOKEN=\"1FUC88b9Z4BaHtQxwIXwYGqFPaVQO7jzXDuYxDuMD2q1s57bX4MvgEMxUCLaH7pbO\")",
      "Bash(source:*)",
      "Bash(PYTHONPATH=/Users/nathanial.smalley/projects/jarvis_coding/event_python_writer python3 /Users/nathanial.smalley/projects/jarvis_coding/event_python_writer/hec_sender.py --product pingfederate --count 5)",
      "Bash(PYTHONPATH=/Users/nathanial.smalley/projects/jarvis_coding/event_python_writer python3 /Users/nathanial.smalley/projects/jarvis_coding/event_python_writer/hec_sender.py --product pingone_mfa --count 3)",
      "Bash(PYTHONPATH=/Users/nathanial.smalley/projects/jarvis_coding/event_python_writer python3 /Users/nathanial.smalley/projects/jarvis_coding/event_python_writer/hec_sender.py --product aws_waf --count 3)",
      "Bash(PYTHONPATH=/Users/nathanial.smalley/projects/jarvis_coding/event_python_writer python3 /Users/nathanial.smalley/projects/jarvis_coding/event_python_writer/hec_sender.py --product pingone_mfa --count 2)",
      "Bash(pip install:*)",
      "Bash(env)",
      "Bash(.venv/bin/python:*)",
      "Bash(__NEW_LINE__ echo \"Testing fixed generators one by one:\")",
      "Bash(__NEW_LINE__ echo \"1. microsoft_azuread:\")",
      "Bash(__NEW_LINE__ echo \"2. extrahop:\")",
      "Bash(__NEW_LINE__ echo \"3. cisco_ise:\")",
      "Bash(__NEW_LINE__ echo \"4. extreme_networks:\")",
      "Bash(__NEW_LINE__ echo \"5. ubiquiti_unifi:\")",
      "Bash(./fix_generators.sh)",
      "Bash(touch:*)",
      "Bash(PYTHONPATH=event_python_writer python3 event_python_writer/enterprise_attack_scenario.py)"
    ],
    "deny": []
  }
}